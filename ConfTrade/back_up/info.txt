



class Tovary_Ceny_View : DirectoryView
    {
        public Tovary_Ceny_View() : base(Config.Kernel, "tovary_ceny_tablepart_v1_1",
            new string[] { "name", "cena" })
        {
            base.QuerySelect.PrimaryField = "owner";

            Where_owner = new Where("owner", Comparison.EQ, null);
            base.QuerySelect.Where.Add(Where_owner);
        }

        public Where Where_owner { get; set; }
    }





select table_name, column_name 
from information_schema.columns 
where table_schema='public'

---------------------------------------------------------------------------------------------------------------------------------------

<xsl:for-each select="Comparison/CreateTable">
        <sql>
          CREATE TABLE <xsl:value-of select="Name"/> (
          uid uuid NOT NULL,
          <xsl:for-each select="Field">
            <xsl:value-of select="Name"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="DataType"/>
            <xsl:text>,</xsl:text>
          </xsl:for-each>
          PRIMARY KEY(uid)
          );
        </sql>
      </xsl:for-each>

      <xsl:for-each select="Comparison/RenameColumn">
        <sql>
          ALTER TABLE <xsl:value-of select="TableName"/> RENAME <xsl:value-of select="Field/Name"/> TO <xsl:value-of select="Field/NewName"/>;
        </sql>
      </xsl:for-each>

      <xsl:for-each select="Comparison/AddColumn">
        <sql>
          ALTER TABLE <xsl:value-of select="TableName"/> ADD COLUMN <xsl:value-of select="Field/Name"/><xsl:text> </xsl:text><xsl:value-of select="Field/DataType"/>;
        </sql>
      </xsl:for-each>

------------------------------------------------------------------------------------------------------------------------------------------

//switch (fieldType)
//{
//    case "string":
//        {
//            if (!(informationSchemaDataType == "text" && informationSchemaUdtName == "text"))
//            {
//                ComparisonSaveAlterColumn(tableName, "text", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "string[]":
//        {
//            if (!(informationSchemaDataType == "ARRAY" && informationSchemaUdtName == "_text"))
//            {
//                ComparisonSaveAlterColumn(tableName, "text[]", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "integer":
//        {
//            if (!(informationSchemaDataType == "integer" && informationSchemaUdtName == "int4"))
//            {
//                ComparisonSaveAlterColumn(tableName, "integer", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "integer[]":
//        {
//            if (!(informationSchemaDataType == "ARRAY" && informationSchemaUdtName == "_int4"))
//            {
//                ComparisonSaveAlterColumn(tableName, "integer[]", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "numeric":
//        {
//            if (!(informationSchemaDataType == "numeric" && informationSchemaUdtName == "numeric"))
//            {
//                ComparisonSaveAlterColumn(tableName, "numeric", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "numeric[]":
//        {
//            if (!(informationSchemaDataType == "ARRAY" && informationSchemaUdtName == "_numeric"))
//            {
//                ComparisonSaveAlterColumn(tableName, "numeric[]", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "boolean":
//        {
//            if (!(informationSchemaDataType == "boolean" && informationSchemaUdtName == "bool"))
//            {
//                ComparisonSaveAlterColumn(tableName, "boolean", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "date":
//        {
//            if (!(informationSchemaDataType == "date" && informationSchemaUdtName == "date"))
//            {
//                ComparisonSaveAlterColumn(tableName, "date", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "time":
//        {
//            if (!(informationSchemaDataType == "time without time zone" && informationSchemaUdtName == "time"))
//            {
//                ComparisonSaveAlterColumn(tableName, "time without time zone", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "datetime":
//        {
//            if (!(informationSchemaDataType == "timestamp without time zone" && informationSchemaUdtName == "timestamp"))
//            {
//                ComparisonSaveAlterColumn(tableName, "timestamp without time zone", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    case "pointer":
//        {
//            if (!(informationSchemaDataType == "uuid" && informationSchemaUdtName == "uuid"))
//            {
//                ComparisonSaveAlterColumn(tableName, "uuid", ConfDirectoryField.Value, xmlComparisonDocument, rootNode);
//            }
//            break;
//        }
//    default:
//        break;
//}

-----------------------------------------------------------------------------
			/*
			ConfigurationDirectories TmcDirectory = new ConfigurationDirectories();
			TmcDirectory.Name = "TMC3";
			TmcDirectory.Desc = "TMC 2";

			ConfigurationObjectField TmcDirectoryField1 = new ConfigurationObjectField();
			TmcDirectoryField1.Name = "Code";
			TmcDirectoryField1.Type = "string";
			TmcDirectoryField1.Desc = "Code";

			ConfigurationObjectField TmcDirectoryField2 = new ConfigurationObjectField();
			TmcDirectoryField2.Name = "Name";
			TmcDirectoryField2.Type = "string";
			TmcDirectoryField2.Desc = "Name";

			TmcDirectory.Fields.Add(TmcDirectoryField1.Name, TmcDirectoryField1);
			TmcDirectory.Fields.Add(TmcDirectoryField2.Name, TmcDirectoryField2);
			*/


			//ConfigurationDirectories tmc6 = Conf.AppendDirectory(new ConfigurationDirectories("TMC6", "Desc"));
			//ConfigurationObjectField fieldName = tmc6.AppendField(new ConfigurationObjectField("Name", "Desc", "string"));
			//tmc6.AppendField(new ConfigurationObjectField("Code", "Desc", "string"));


			//Conf.Directories["TMC6"].TabularParts.Add("Od", new ConfigurationObjectTablePart("Od"));
			//Conf.Directories["TMC6"].TabularParts["Od"].Fields.Add("Name", new ConfigurationObjectField("Name"));

			//Conf.Directories["Tovary"].TabularParts.Add("Od", new ConfigurationObjectTablePart("Od"));
			//Conf.Directories["Tovary"].TabularParts["Od"].Fields.Add("Name", new ConfigurationObjectField("Name"));

			#endregion

			//-------------------------------------------------------

			//dataConfiguration.Columns.Add("Name", "NAME");
			//dataConfiguration.Columns.Add("Code", "CODE");

			//DataGridViewComboBoxColumn cbc = new DataGridViewComboBoxColumn();
			//cbc.Name = "List";
			//cbc.FlatStyle = FlatStyle.Flat;
			//cbc.Items.Add("10");
			//cbc.Items.Add("30");
			//cbc.Items.Add("80");
			//cbc.Items.Add("100");
			//dataConfiguration.Columns.Add(cbc);

			//DataGridViewCheckBoxColumn cbbc = new DataGridViewCheckBoxColumn(false);
			//cbbc.Name = "Check";
			//dataConfiguration.Columns.Add(cbbc);

			//DataGridViewTextBoxColumn tbc = new DataGridViewTextBoxColumn();
			//tbc.Name = "Text";
			//dataConfiguration.Columns.Add(tbc);

			//for (int i = 0; i < 5; i++)
			//	dataConfiguration.Rows.Add(new object[] { "10", "32", "30", true, "" });